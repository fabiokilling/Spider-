MongoDB Windows系统各个64位版本下载地址：

http://dl.mongodb.org/dl/win32/x86_64

MongoDB中文社区

http://www.mongoing.com/

模糊查找MongoDB
from pymongo import MongoClient
client = MongoClient(host="localhost", port=27017)
results= client.scrapy.content.find({'title':{'$regex':'推广'}})
for result in results:
    title = result.get('title','')
    url = result.get('source_url','')
    print(title,url)
    

写入数据
client.scrapy.content.update_many({'origin_name':3},{'$set':{'praise_count':0}})

删除指定标签
client.scrapy.zhangbo.update_many({},{'$unset':{'title':''}})

删除数据
client.scrapy.zhangbo.delete_many({'origin_name':2})

增加枚举关键字
client.scrapy.zhangbo.update_many({},{'$set':{'title':''}})

备份数据到本地
mongodump -h 1xx.xx.xxx.xx:2xxxx -d scrapy -c 名称(可去) -o C:\data\db

上传本地Bson,Json到MongoDB
mongorestore.exe --host 127.0.0.1 --port 27017 -d scrapy C:\data\db\scrapy

Python代码查询xx日期之后数据
client.scrapy.xxxx.find({'origin_name':3,'crawl_time':{'$gte':datetime.datetime(2018,7,17)}}).count()



import pymongo
import datetime
import time
time = time.localtime(time.time())
a = time.tm_year
b = time.tm_mon
c = time.tm_mday
class pymongo_cls():

    def __init__(self):
        #填入ip port,username,password
        self.ip = 'dxx-xx.mongodb.rds.aliyuncs.com'
        self.port = xxxx
        self.username = 'xxx'
        self.password = 'xxx'
        self.client=pymongo.MongoClient(self.ip, self.port)

        self.db=self.client.scrapy
        self.db.authenticate(self.username, self.password)
        self.collection = self.db.content
        self.keywords =self.db.sensitive

mongo_cls = pymongo_cls()

print(f"总数: {mongo_cls.collection.count({})}")
print(f"总日增: {mongo_cls.collection.count({'crawl_time':{'$gte':datetime.datetime(a,b,c)}})}")
print(f"xx日增: {mongo_cls.collection.count({'origin_name':1,'crawl_time':{'$gte':datetime.datetime(a,b,c)}})}")
print(f"xx日增: {mongo_cls.collection.count({'origin_name':2,'crawl_time':{'$gte':datetime.datetime(a,b,c)}})}")
print(f"xx日增: {mongo_cls.collection.count({'origin_name':3,'crawl_time':{'$gte':datetime.datetime(a,b,c)}})}")
print(f"xx日增: {mongo_cls.collection.count({'origin_name':4,'crawl_time':{'$gte':datetime.datetime(a,b,c)}})}")


Mongo建立索引
import pymongo
client = pymongo.MongoClient(host = "xxx.xx.xxx.xx", port = xxxxx)
collection= client.scrapy.collectionText
#result=collection.ensure_index("title",unique=True)
result=collection.ensure_index("origin_name")

Mongo查询增加游标，切分大小，防止处理不完数据造成超时
client.scrapy.xxxxx.find({'origin_name':3}).batch_size(1000)

MongoDB compass查询字段是否存在
{origin_name:3,text_body:{$exists:true}}
{origin_name:3,crawl_time:{$gte:(2018)}}    #存疑


Mongo查询设置条数上限
.limit(2000)


Mongo文章
https://blog.csdn.net/hzrandd/article/details/49003387
https://www.jb51.net/article/78111.htm

当然使用索引是也是有代价的：对于添加的每一条索引，每次写操作（插入、更新、删除）都将耗费更多的时间。这是因为，当数据发生变化时，不仅要更新文档，还要更新级集合上的所有索引。因此，mongodb限制每个集合最多有64个索引。通常，在一个特定的集合上，不应该拥有两个以上的索引。

小技巧
如果一个非常通用的查询，或者这个查询造成了性能瓶颈，那么在某字段（比如username）建立索引是非常好的选择。但只是给管理员用的查询（不太在意查询耗费时间），就不该对这个字段建立索引。

update里有个参数 ‘$setOnInsert’ 可以实现”存在则不执行”的功能  https://docs.mongodb.com/manual/reference/operator/update/setOnInsert/
